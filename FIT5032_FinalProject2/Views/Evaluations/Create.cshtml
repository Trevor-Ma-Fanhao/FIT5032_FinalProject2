@model FIT5032_FinalProject2.Models.Evaluation

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Evaluation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Recovery, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Recovery, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Recovery, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Waiting, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Waiting, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Waiting, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.satisfaction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.satisfaction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.satisfaction, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
        <title> Make  Evaluation and Send Email </title>
        <script>
            function MakeEvaluation() {

                // Get the data from the input fields
                const Recovery = document.getElementById("Recovery").value;
                const Waiting = document.getElementById("Waiting").value;
                const satisfaction = document.getElementById("satisfaction").value;
                const EmailAddress = document.getElementById("email-address").value;



                const Attachment = document.querySelector('#attachment').files[0];
                alert("Attachment size: " + Attachment.size + " bytes.");


                // Create FormData object:
                var SentData = new FormData();
                SentData.append("Recovery", Recovery);
                SentData.append("Waiting", Waiting);
                SentData.append("satisfaction", satisfaction);
                SentData.append("EmailAddress", EmailAddress);
                SentData.append("Attachment", Attachment);

                /*
                // Inspect Form Data:
                for (var pair of SentData.entries())
                {
                    alert(pair[0] + ', ' + pair[1]);
                }
                */



                // Make a POST request to the controller action with the data
                $.ajax({
                    url: "/Evaluations/CreateEvaluation",
                    type: "POST",
                    data: SentData,
                    processData: false,
                    contentType: false,
                    async: false,
                    success: function (response) {
                        // Handle the response from the server
                        if (response == "Success")
                        {
                            alert("Recovery[" + Recovery + "] and Waiting[" + Waiting + "] and satisfaction " + satisfaction + ".");
                        }
                        else
                        {
                            alert(response.statusText);
                        }
                    },
                    error: function (error) {
                        // Handle any errors from the server
                        alert(error.statusText);
                    }
                });

            }
        </script>
    </head>



    <body>
        <h4 align="center">Make Evaluation and Send Email</h4>
        <div class="container" align="center">
            <form>
                <label for="Recovery">Recovery:</label>
                <input type="number" id="Recovery" name="Recovery" placeholder="Enter a number between 1 and 5" min="1" max="5"> <br />

                <label for="Waiting">Waiting:</label>
                <input type="number" id="Waiting" name="Waiting" placeholder="Enter a number between 1 and 5" min="1" max="5"> <br />

                <label for="satisfaction">Satisfaction:</label>
                <input type="number" id="satisfaction" name="satisfaction" placeholder="Enter a number between 1 and 5" min="1" max="5"> <br />

                <br />
                <div> Upload Your Attachment (A picture of the recovery) </div>
                <input type="file" id="attachment">
                <br />
                <input type="text" id="email-address" placeholder="Your Email Address"> <br />

                <button onClick="MakeEvaluation()">Make an Evaluation</button>
            </form>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js" integrity="sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V" crossorigin="anonymous"></script>

    </body>

    <style>
        input {
            margin: 5px;
        }
    </style>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
}
