@model IEnumerable<FIT5032_FinalProject2.Models.Evaluation>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Recovery)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Waiting)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.satisfaction)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserID)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Recovery)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Waiting)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.satisfaction)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserID)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>
<div style="width: 80%; margin: auto;">
    <canvas id="myChart"></canvas> </div>
<script>
    var ctx = document.getElementById('myChart').getContext('2d');
    var data = @Html.Raw(Json.Encode(Model));
    var labels = data.map(item => item.UserID);
    var recoveryData = data.map(item => item.Recovery);
    var waitingData = data.map(item => item.Waiting);
    var satisfactionData = data.map(item => item.satisfaction);
    var myChart = new Chart(ctx, { type: 'line', data: { labels: labels, datasets: [{ label: 'Recovery', data: recoveryData, borderColor: 'rgba(75, 192, 192, 1)', borderWidth: 1, fill: false }, { label: 'Waiting', data: waitingData, borderColor: 'rgba(255, 99, 132, 1)', borderWidth: 1, fill: false }, { label: 'Satisfaction', data: satisfactionData, borderColor: 'rgba(54, 162, 235, 1)', borderWidth: 1, fill: false }] }, options: { scales: { x: { beginAtZero: true }, y: { beginAtZero: true } } } });
 </script>
@section Scripts {

    @Scripts.Render("~/Scripts/DataTables/jquery.dataTables.js")
    @Scripts.Render("~/Scripts/DataTables/dataTables.bootstrap4.js")
    <script>
        $(document).ready(function () {
            $('.table').DataTable();
        });
    </script>

}
<link href="~/Content/DataTables/css/dataTables.bootstrap4.css"
      rel="stylesheet" />